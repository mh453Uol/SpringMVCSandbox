<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.in28minutes" />

	<!-- ViewResolver helps you to find jsp files. Rather than specificying 
		a full url so //http:localhost:8080/spring-mvc/WEB-INF/views/login.jsp we 
		can make use of prefix and suppix prefix is //http:localhost:8080/spring-mvc[[/WEB-INF/views/]]login.jsp 
		suppix is //http:localhost:8080/spring-mvc/WEB-INF/views/login.[[jsp]] so 
		when in our controller we do /login view resolvers make the path as /WEB-INF/views/login.jsp 
		and try to find a jsp page -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<mvc:annotation-driven />

	<!-- 
	*.properties can store the error messages for our models 
	properties files contains keys i.e Size.student.firstname = HElLO
	so annotation @Size on student class firstname variable.
	-->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/validation-anotation-description"></property>
		<property name="cacheSeconds" value="1"></property>
	</bean>
</beans>